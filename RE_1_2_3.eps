%!PS-Adobe-2.0 EPSF-2.0
%%Title: RE_1_2_3.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Mon Apr 20 07:54:10 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (RE_1_2_3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 20 07:54:10 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 448 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 448 M
63 0 V
5129 0 R
-63 0 V
stroke
693 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 1190 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 1190 M
63 0 V
5129 0 R
-63 0 V
stroke
693 1190 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 1932 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 1932 M
63 0 V
5129 0 R
-63 0 V
stroke
693 1932 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 2674 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 2674 M
63 0 V
5129 0 R
-63 0 V
stroke
693 2674 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 3415 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 3415 M
63 0 V
5129 0 R
-63 0 V
stroke
693 3415 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 4157 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 4157 M
63 0 V
5129 0 R
-63 0 V
stroke
693 4157 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 4899 M
5192 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 4899 M
63 0 V
5129 0 R
-63 0 V
stroke
693 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
777 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
777 448 M
0 63 V
0 4388 R
0 -63 V
stroke
777 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1519 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1519 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1519 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2260 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2260 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2260 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3002 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3002 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3002 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3744 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3744 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3744 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4486 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4486 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4486 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5227 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5227 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5227 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5969 448 M
0 4451 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5969 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5969 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
777 4899 N
777 448 L
5192 0 V
0 4451 V
-5192 0 V
Z stroke
1.000 UP
1.000 UL
[] 0 setdash
.8 g 3950 2213 M
1032 3898 L
stroke
[] 0 setdash
.8 g 1032 3898 M
0 -3371 V
stroke
[] 0 setdash
.8 g 1032 527 M
3950 2213 L
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
217 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (y)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3373 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (x)]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
.8 g .8 g 3950 2213 Pls
.804 g 3976 2215 Pls
.808 g 4003 2218 Pls
.812 g 4032 2220 Pls
.816 g 4062 2223 Pls
.82 g 4094 2226 Pls
.824 g 4128 2228 Pls
.828 g 4164 2231 Pls
.832 g 4204 2234 Pls
.836 g 4246 2237 Pls
.84 g 4292 2240 Pls
.844 g 4342 2244 Pls
.848 g 4398 2247 Pls
.852 g 4460 2250 Pls
.856 g 4531 2253 Pls
.86 g 4613 2255 Pls
.864 g 4712 2257 Pls
.868 g 4834 2259 Pls
.872 g 5000 2259 Pls
.876 g 5274 2255 Pls
.8 g 3950 2213 Pls
.796 g 3926 2210 Pls
.792 g 3902 2208 Pls
.788 g 3880 2205 Pls
.784 g 3859 2203 Pls
.78 g 3838 2201 Pls
.776 g 3818 2199 Pls
.772 g 3799 2197 Pls
.768 g 3781 2195 Pls
.764 g 3763 2193 Pls
.76 g 3746 2191 Pls
.756 g 3729 2189 Pls
.752 g 3713 2187 Pls
.748 g 3698 2186 Pls
.744 g 3682 2184 Pls
.74 g 3668 2182 Pls
.736 g 3654 2180 Pls
.732 g 3640 2179 Pls
.728 g 3626 2177 Pls
.724 g 3613 2176 Pls
.72 g 3600 2174 Pls
.716 g 3588 2173 Pls
.712 g 3576 2171 Pls
.708 g 3564 2170 Pls
.704 g 3552 2169 Pls
.7 g 3541 2167 Pls
.696 g 3530 2166 Pls
.692 g 3519 2165 Pls
.688 g 3509 2163 Pls
.684 g 3498 2162 Pls
.68 g 3488 2161 Pls
.676 g 3478 2160 Pls
.672 g 3469 2158 Pls
.668 g 3459 2157 Pls
.664 g 3450 2156 Pls
.66 g 3441 2155 Pls
.656 g 3432 2154 Pls
.652 g 3423 2153 Pls
.648 g 3414 2152 Pls
.644 g 3406 2151 Pls
.64 g 3398 2150 Pls
.636 g 3389 2149 Pls
.632 g 3381 2148 Pls
.628 g 3373 2147 Pls
.624 g 3366 2146 Pls
.62 g 3358 2145 Pls
.616 g 3350 2144 Pls
.612 g 3343 2143 Pls
.608 g 3336 2142 Pls
.604 g 3329 2141 Pls
.6 g 3322 2140 Pls
.596 g 3315 2139 Pls
.592 g 3308 2138 Pls
.588 g 3301 2138 Pls
.584 g 3294 2137 Pls
.58 g 3288 2136 Pls
.576 g 3282 2135 Pls
.572 g 3275 2134 Pls
.568 g 3269 2134 Pls
.564 g 3263 2133 Pls
.56 g 3257 2132 Pls
.556 g 3251 2131 Pls
.552 g 3245 2131 Pls
.548 g 3239 2130 Pls
.544 g 3233 2129 Pls
.54 g 3227 2128 Pls
.536 g 3222 2128 Pls
.532 g 3216 2127 Pls
.528 g 3211 2126 Pls
.524 g 3205 2126 Pls
.52 g 3200 2125 Pls
.516 g 3195 2124 Pls
.512 g 3190 2124 Pls
.508 g 3184 2123 Pls
.504 g 3179 2122 Pls
.5 g 3174 2122 Pls
.496 g 3169 2121 Pls
.492 g 3164 2120 Pls
.488 g 3159 2120 Pls
.484 g 3155 2119 Pls
.48 g 3150 2119 Pls
.476 g 3145 2118 Pls
.472 g 3141 2117 Pls
.468 g 3136 2117 Pls
.464 g 3131 2116 Pls
.46 g 3127 2116 Pls
.456 g 3122 2115 Pls
.452 g 3118 2115 Pls
.448 g 3114 2114 Pls
.444 g 3109 2114 Pls
.44 g 3105 2113 Pls
.436 g 3101 2112 Pls
.432 g 3097 2112 Pls
.428 g 3093 2111 Pls
.424 g 3089 2111 Pls
.42 g 3084 2110 Pls
.416 g 3080 2110 Pls
.412 g 3076 2109 Pls
.408 g 3073 2109 Pls
.404 g 3069 2108 Pls
.4 g 3065 2108 Pls
.396 g 3061 2107 Pls
.392 g 3057 2107 Pls
.388 g 3053 2106 Pls
.384 g 3050 2106 Pls
.38 g 3046 2106 Pls
.376 g 3042 2105 Pls
.372 g 3039 2105 Pls
.368 g 3035 2104 Pls
.364 g 3032 2104 Pls
.36 g 3028 2103 Pls
.356 g 3025 2103 Pls
.352 g 3021 2102 Pls
.348 g 3018 2102 Pls
.344 g 3014 2102 Pls
.34 g 3011 2101 Pls
.336 g 3007 2101 Pls
.332 g 3004 2100 Pls
.328 g 3001 2100 Pls
.324 g 2998 2100 Pls
.32 g 2994 2099 Pls
.316 g 2991 2099 Pls
.312 g 2988 2098 Pls
.308 g 2985 2098 Pls
.304 g 2982 2098 Pls
.3 g 2979 2097 Pls
.296 g 2975 2097 Pls
.292 g 2972 2096 Pls
.288 g 2969 2096 Pls
.284 g 2966 2096 Pls
.28 g 2963 2095 Pls
.276 g 2960 2095 Pls
.272 g 2957 2094 Pls
.268 g 2955 2094 Pls
.264 g 2952 2094 Pls
.26 g 2949 2093 Pls
.256 g 2946 2093 Pls
.252 g 2943 2093 Pls
.248 g 2940 2092 Pls
.244 g 2937 2092 Pls
.24 g 2935 2092 Pls
.236 g 2932 2091 Pls
.232 g 2929 2091 Pls
.228 g 2926 2091 Pls
.224 g 2924 2090 Pls
.22 g 2921 2090 Pls
.216 g 2918 2090 Pls
.212 g 2916 2089 Pls
.208 g 2913 2089 Pls
.204 g 2911 2089 Pls
.2 g 2908 2088 Pls
.196 g 2905 2088 Pls
.192 g 2903 2088 Pls
.188 g 2900 2087 Pls
.184 g 2898 2087 Pls
.18 g 2895 2087 Pls
.176 g 2893 2086 Pls
.172 g 2890 2086 Pls
.168 g 2888 2086 Pls
.164 g 2886 2086 Pls
.16 g 2883 2085 Pls
.156 g 2881 2085 Pls
.152 g 2878 2085 Pls
.148 g 2876 2084 Pls
.144 g 2874 2084 Pls
.14 g 2871 2084 Pls
.136 g 2869 2083 Pls
.132 g 2867 2083 Pls
.128 g 2864 2083 Pls
.124 g 2862 2083 Pls
.12 g 2860 2082 Pls
.116 g 2858 2082 Pls
.112 g 2855 2082 Pls
.108 g 2853 2082 Pls
.104 g 2851 2081 Pls
.1 g 2849 2081 Pls
.096 g 2846 2081 Pls
.092 g 2844 2080 Pls
.088 g 2842 2080 Pls
.084 g 2840 2080 Pls
.08 g 2838 2080 Pls
.076 g 2836 2079 Pls
.072 g 2834 2079 Pls
.068 g 2832 2079 Pls
.064 g 2829 2079 Pls
.06 g 2827 2078 Pls
.056 g 2825 2078 Pls
.052 g 2823 2078 Pls
.048 g 2821 2078 Pls
.044 g 2819 2077 Pls
.04 g 2817 2077 Pls
.036 g 2815 2077 Pls
.032 g 2813 2077 Pls
.028 g 2811 2076 Pls
.024 g 2809 2076 Pls
.02 g 2807 2076 Pls
.016 g 2805 2076 Pls
.012 g 2803 2075 Pls
.008 g 2801 2075 Pls
.004 g 2800 2075 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
.8 g .8 g 1032 3898 Pls
.804 g 1029 3913 Pls
.808 g 1025 3930 Pls
.812 g 1021 3947 Pls
.816 g 1016 3965 Pls
.82 g 1012 3983 Pls
.824 g 1007 4003 Pls
.828 g 1002 4023 Pls
.832 g 996 4045 Pls
.836 g 990 4067 Pls
.84 g 983 4091 Pls
.844 g 976 4116 Pls
.848 g 968 4142 Pls
.852 g 959 4170 Pls
.856 g 949 4200 Pls
.86 g 937 4232 Pls
.864 g 923 4266 Pls
.868 g 906 4303 Pls
.872 g 884 4341 Pls
.876 g 850 4379 Pls
.8 g 1032 3898 Pls
.796 g 1036 3882 Pls
.792 g 1039 3867 Pls
.788 g 1042 3853 Pls
.784 g 1046 3839 Pls
.78 g 1049 3826 Pls
.776 g 1051 3813 Pls
.772 g 1054 3800 Pls
.768 g 1057 3788 Pls
.764 g 1059 3776 Pls
.76 g 1062 3765 Pls
.756 g 1064 3754 Pls
.752 g 1067 3743 Pls
.748 g 1069 3732 Pls
.744 g 1071 3722 Pls
.74 g 1073 3712 Pls
.736 g 1076 3702 Pls
.732 g 1078 3692 Pls
.728 g 1080 3683 Pls
.724 g 1082 3674 Pls
.72 g 1083 3665 Pls
.716 g 1085 3656 Pls
.712 g 1087 3647 Pls
.708 g 1089 3639 Pls
.704 g 1091 3631 Pls
.7 g 1092 3623 Pls
.696 g 1094 3615 Pls
.692 g 1096 3607 Pls
.688 g 1097 3599 Pls
.684 g 1099 3592 Pls
.68 g 1101 3584 Pls
.676 g 1102 3577 Pls
.672 g 1104 3570 Pls
.668 g 1105 3563 Pls
.664 g 1106 3557 Pls
.66 g 1108 3550 Pls
.656 g 1109 3543 Pls
.652 g 1111 3537 Pls
.648 g 1112 3530 Pls
.644 g 1113 3524 Pls
.64 g 1115 3518 Pls
.636 g 1116 3512 Pls
.632 g 1117 3506 Pls
.628 g 1118 3500 Pls
.624 g 1120 3494 Pls
.62 g 1121 3489 Pls
.616 g 1122 3483 Pls
.612 g 1123 3477 Pls
.608 g 1124 3472 Pls
.604 g 1126 3467 Pls
.6 g 1127 3461 Pls
.596 g 1128 3456 Pls
.592 g 1129 3451 Pls
.588 g 1130 3446 Pls
.584 g 1131 3441 Pls
.58 g 1132 3436 Pls
.576 g 1133 3431 Pls
.572 g 1134 3426 Pls
.568 g 1135 3422 Pls
.564 g 1136 3417 Pls
.56 g 1137 3412 Pls
.556 g 1138 3408 Pls
.552 g 1139 3403 Pls
.548 g 1140 3399 Pls
.544 g 1141 3394 Pls
.54 g 1142 3390 Pls
.536 g 1143 3386 Pls
.532 g 1144 3381 Pls
.528 g 1145 3377 Pls
.524 g 1146 3373 Pls
.52 g 1147 3369 Pls
.516 g 1148 3365 Pls
.512 g 1149 3361 Pls
.508 g 1149 3357 Pls
.504 g 1150 3353 Pls
.5 g 1151 3349 Pls
.496 g 1152 3345 Pls
.492 g 1153 3341 Pls
.488 g 1154 3338 Pls
.484 g 1154 3334 Pls
.48 g 1155 3330 Pls
.476 g 1156 3327 Pls
.472 g 1157 3323 Pls
.468 g 1158 3319 Pls
.464 g 1158 3316 Pls
.46 g 1159 3312 Pls
.456 g 1160 3309 Pls
.452 g 1161 3306 Pls
.448 g 1161 3302 Pls
.444 g 1162 3299 Pls
.44 g 1163 3295 Pls
.436 g 1164 3292 Pls
.432 g 1164 3289 Pls
.428 g 1165 3286 Pls
.424 g 1166 3282 Pls
.42 g 1167 3279 Pls
.416 g 1167 3276 Pls
.412 g 1168 3273 Pls
.408 g 1169 3270 Pls
.404 g 1169 3267 Pls
.4 g 1170 3264 Pls
.396 g 1171 3261 Pls
.392 g 1171 3258 Pls
.388 g 1172 3255 Pls
.384 g 1173 3252 Pls
.38 g 1173 3249 Pls
.376 g 1174 3246 Pls
.372 g 1175 3243 Pls
.368 g 1175 3240 Pls
.364 g 1176 3238 Pls
.36 g 1176 3235 Pls
.356 g 1177 3232 Pls
.352 g 1178 3229 Pls
.348 g 1178 3227 Pls
.344 g 1179 3224 Pls
.34 g 1180 3221 Pls
.336 g 1180 3219 Pls
.332 g 1181 3216 Pls
.328 g 1181 3213 Pls
.324 g 1182 3211 Pls
.32 g 1182 3208 Pls
.316 g 1183 3206 Pls
.312 g 1184 3203 Pls
.308 g 1184 3201 Pls
.304 g 1185 3198 Pls
.3 g 1185 3196 Pls
.296 g 1186 3193 Pls
.292 g 1186 3191 Pls
.288 g 1187 3188 Pls
.284 g 1188 3186 Pls
.28 g 1188 3184 Pls
.276 g 1189 3181 Pls
.272 g 1189 3179 Pls
.268 g 1190 3177 Pls
.264 g 1190 3174 Pls
.26 g 1191 3172 Pls
.256 g 1191 3170 Pls
.252 g 1192 3167 Pls
.248 g 1192 3165 Pls
.244 g 1193 3163 Pls
.24 g 1193 3161 Pls
.236 g 1194 3158 Pls
.232 g 1194 3156 Pls
.228 g 1195 3154 Pls
.224 g 1195 3152 Pls
.22 g 1196 3150 Pls
.216 g 1196 3148 Pls
.212 g 1197 3146 Pls
.208 g 1197 3143 Pls
.204 g 1198 3141 Pls
.2 g 1198 3139 Pls
.196 g 1199 3137 Pls
.192 g 1199 3135 Pls
.188 g 1200 3133 Pls
.184 g 1200 3131 Pls
.18 g 1201 3129 Pls
.176 g 1201 3127 Pls
.172 g 1201 3125 Pls
.168 g 1202 3123 Pls
.164 g 1202 3121 Pls
.16 g 1203 3119 Pls
.156 g 1203 3117 Pls
.152 g 1204 3115 Pls
.148 g 1204 3114 Pls
.144 g 1205 3112 Pls
.14 g 1205 3110 Pls
.136 g 1205 3108 Pls
.132 g 1206 3106 Pls
.128 g 1206 3104 Pls
.124 g 1207 3102 Pls
.12 g 1207 3100 Pls
.116 g 1208 3099 Pls
.112 g 1208 3097 Pls
.108 g 1208 3095 Pls
.104 g 1209 3093 Pls
.1 g 1209 3091 Pls
.096 g 1210 3090 Pls
.092 g 1210 3088 Pls
.088 g 1211 3086 Pls
.084 g 1211 3084 Pls
.08 g 1211 3083 Pls
.076 g 1212 3081 Pls
.072 g 1212 3079 Pls
.068 g 1213 3078 Pls
.064 g 1213 3076 Pls
.06 g 1213 3074 Pls
.056 g 1214 3073 Pls
.052 g 1214 3071 Pls
.048 g 1215 3069 Pls
.044 g 1215 3068 Pls
.04 g 1215 3066 Pls
.036 g 1216 3064 Pls
.032 g 1216 3063 Pls
.028 g 1216 3061 Pls
.024 g 1217 3059 Pls
.02 g 1217 3058 Pls
.016 g 1218 3056 Pls
.012 g 1218 3055 Pls
.008 g 1218 3053 Pls
.004 g 1219 3052 Pls
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
.8 g .8 g 1032 527 Pls
.804 g 1032 522 Pls
.808 g 1031 517 Pls
.812 g 1031 512 Pls
.816 g 1031 507 Pls
.82 g 1031 502 Pls
.824 g 1031 498 Pls
.828 g 1031 493 Pls
.832 g 1032 488 Pls
.836 g 1033 484 Pls
.84 g 1034 480 Pls
.844 g 1036 476 Pls
.848 g 1038 472 Pls
.852 g 1042 469 Pls
.856 g 1046 467 Pls
.86 g 1052 466 Pls
.864 g 1061 467 Pls
.868 g 1072 470 Pls
.872 g 1090 476 Pls
.876 g 1123 491 Pls
.8 g 1032 527 Pls
.796 g 1033 533 Pls
.792 g 1034 538 Pls
.788 g 1035 542 Pls
.784 g 1035 547 Pls
.78 g 1036 552 Pls
.776 g 1037 557 Pls
.772 g 1038 562 Pls
.768 g 1039 567 Pls
.764 g 1040 572 Pls
.76 g 1041 576 Pls
.756 g 1042 581 Pls
.752 g 1043 585 Pls
.748 g 1044 590 Pls
.744 g 1045 594 Pls
.74 g 1046 599 Pls
.736 g 1047 603 Pls
.732 g 1048 608 Pls
.728 g 1050 612 Pls
.724 g 1051 616 Pls
.72 g 1052 620 Pls
.716 g 1053 624 Pls
.712 g 1054 628 Pls
.708 g 1055 633 Pls
.704 g 1056 637 Pls
.7 g 1057 640 Pls
.696 g 1058 644 Pls
.692 g 1059 648 Pls
.688 g 1060 652 Pls
.684 g 1061 656 Pls
.68 g 1062 659 Pls
.676 g 1063 663 Pls
.672 g 1064 667 Pls
.668 g 1065 670 Pls
.664 g 1066 674 Pls
.66 g 1067 677 Pls
.656 g 1068 681 Pls
.652 g 1069 684 Pls
.648 g 1070 688 Pls
.644 g 1071 691 Pls
.64 g 1072 695 Pls
.636 g 1073 698 Pls
.632 g 1074 701 Pls
.628 g 1075 704 Pls
.624 g 1076 707 Pls
.62 g 1077 711 Pls
.616 g 1078 714 Pls
.612 g 1079 717 Pls
.608 g 1080 720 Pls
.604 g 1081 723 Pls
.6 g 1082 726 Pls
.596 g 1083 729 Pls
.592 g 1084 732 Pls
.588 g 1084 735 Pls
.584 g 1085 738 Pls
.58 g 1086 741 Pls
.576 g 1087 743 Pls
.572 g 1088 746 Pls
.568 g 1089 749 Pls
.564 g 1090 752 Pls
.56 g 1090 754 Pls
.556 g 1091 757 Pls
.552 g 1092 760 Pls
.548 g 1093 762 Pls
.544 g 1094 765 Pls
.54 g 1095 768 Pls
.536 g 1095 770 Pls
.532 g 1096 773 Pls
.528 g 1097 775 Pls
.524 g 1098 778 Pls
.52 g 1099 780 Pls
.516 g 1099 783 Pls
.512 g 1100 785 Pls
.508 g 1101 788 Pls
.504 g 1102 790 Pls
.5 g 1102 792 Pls
.496 g 1103 795 Pls
.492 g 1104 797 Pls
.488 g 1105 799 Pls
.484 g 1105 802 Pls
.48 g 1106 804 Pls
.476 g 1107 806 Pls
.472 g 1108 809 Pls
.468 g 1108 811 Pls
.464 g 1109 813 Pls
.46 g 1110 815 Pls
.456 g 1110 817 Pls
.452 g 1111 820 Pls
.448 g 1112 822 Pls
.444 g 1113 824 Pls
.44 g 1113 826 Pls
.436 g 1114 828 Pls
.432 g 1115 830 Pls
.428 g 1115 832 Pls
.424 g 1116 834 Pls
.42 g 1117 836 Pls
.416 g 1117 838 Pls
.412 g 1118 840 Pls
.408 g 1119 842 Pls
.404 g 1119 844 Pls
.4 g 1120 846 Pls
.396 g 1121 848 Pls
.392 g 1121 850 Pls
.388 g 1122 852 Pls
.384 g 1122 854 Pls
.38 g 1123 856 Pls
.376 g 1124 858 Pls
.372 g 1124 860 Pls
.368 g 1125 861 Pls
.364 g 1126 863 Pls
.36 g 1126 865 Pls
.356 g 1127 867 Pls
.352 g 1127 869 Pls
.348 g 1128 871 Pls
.344 g 1129 872 Pls
.34 g 1129 874 Pls
.336 g 1130 876 Pls
.332 g 1130 878 Pls
.328 g 1131 879 Pls
.324 g 1131 881 Pls
.32 g 1132 883 Pls
.316 g 1133 884 Pls
.312 g 1133 886 Pls
.308 g 1134 888 Pls
.304 g 1134 889 Pls
.3 g 1135 891 Pls
.296 g 1135 893 Pls
.292 g 1136 894 Pls
.288 g 1136 896 Pls
.284 g 1137 898 Pls
.28 g 1138 899 Pls
.276 g 1138 901 Pls
.272 g 1139 902 Pls
.268 g 1139 904 Pls
.264 g 1140 906 Pls
.26 g 1140 907 Pls
.256 g 1141 909 Pls
.252 g 1141 910 Pls
.248 g 1142 912 Pls
.244 g 1142 913 Pls
.24 g 1143 915 Pls
.236 g 1143 916 Pls
.232 g 1144 918 Pls
.228 g 1144 919 Pls
.224 g 1145 921 Pls
.22 g 1145 922 Pls
.216 g 1146 924 Pls
.212 g 1146 925 Pls
.208 g 1147 927 Pls
.204 g 1147 928 Pls
.2 g 1148 929 Pls
.196 g 1148 931 Pls
.192 g 1149 932 Pls
.188 g 1149 934 Pls
.184 g 1150 935 Pls
.18 g 1150 936 Pls
.176 g 1151 938 Pls
.172 g 1151 939 Pls
.168 g 1151 941 Pls
.164 g 1152 942 Pls
.16 g 1152 943 Pls
.156 g 1153 945 Pls
.152 g 1153 946 Pls
.148 g 1154 947 Pls
.144 g 1154 949 Pls
.14 g 1155 950 Pls
.136 g 1155 951 Pls
.132 g 1156 952 Pls
.128 g 1156 954 Pls
.124 g 1156 955 Pls
.12 g 1157 956 Pls
.116 g 1157 958 Pls
.112 g 1158 959 Pls
.108 g 1158 960 Pls
.104 g 1159 961 Pls
.1 g 1159 963 Pls
.096 g 1159 964 Pls
.092 g 1160 965 Pls
.088 g 1160 966 Pls
.084 g 1161 968 Pls
.08 g 1161 969 Pls
.076 g 1162 970 Pls
.072 g 1162 971 Pls
.068 g 1162 972 Pls
.064 g 1163 974 Pls
.06 g 1163 975 Pls
.056 g 1164 976 Pls
.052 g 1164 977 Pls
.048 g 1164 978 Pls
.044 g 1165 980 Pls
.04 g 1165 981 Pls
.036 g 1166 982 Pls
.032 g 1166 983 Pls
.028 g 1166 984 Pls
.024 g 1167 985 Pls
.02 g 1167 986 Pls
.016 g 1168 988 Pls
.012 g 1168 989 Pls
.008 g 1168 990 Pls
.004 g 1169 991 Pls
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
777 4899 N
777 448 L
5192 0 V
0 4451 V
-5192 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6099 448 translate 259 4451 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6099 448 N
259 0 V
0 4451 V
-259 0 V
0 -4451 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
6358 448 M
-63 0 V
stroke
6442 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 448 M
63 0 V
196 890 R
-63 0 V
stroke
6442 1338 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 1338 M
63 0 V
196 890 R
-63 0 V
stroke
6442 2228 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 2228 M
63 0 V
196 890 R
-63 0 V
stroke
6442 3118 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 3118 M
63 0 V
196 890 R
-63 0 V
stroke
6442 4008 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 4008 M
63 0 V
196 891 R
-63 0 V
stroke
6442 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6099 4899 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
